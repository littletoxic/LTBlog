@page "/image-converter"
@inject ILogger<ImageConverter> Logger
@using System.IO.Compression
@using SixLabors.ImageSharp
@using SixLabors.ImageSharp.Formats

<PageTitle>图片格式转换</PageTitle>

<h1>图片格式转换</h1>

@if (_convertItems.Count == 0) {
    <FluentInputFile Id="my-file-uploader"
                     Mode="InputFileMode.SaveToTemporaryFolder"
                     MaximumFileSize="@(100 * 1024 * 1024)"
                     Style="height: 300px;"
                     Multiple="true"
                     OnCompleted="OnFilesUploaded"
                     Accept="image/*">
        <ChildContent>
            <label for="my-file-uploader">
                <FluentIcon Value="@(new Icons.Regular.Size24.ArrowUpload())" />
            </label>

            <div>
                拖拽图片文件到这里进行上传,
                或 <label for="my-file-uploader">浏览</label>
                选择文件<span style="color: red;">*</span>。
                <br />
            </div>

        </ChildContent>
    </FluentInputFile>
} else {
    <ul>
        @foreach (var item in _convertItems) {
            <li style="display: flex">
                <div>
                    <div>@item.OriginalFile</div>
                </div>
                <div>
                    <FluentSelect @bind-SelectedOption="@item.TargetFormat" OptionText="f => f!.Name" Items="@_formats" Placeholder="请选择" />
                </div>
            </li>
        }
    </ul>
    <FluentDataGrid Items="@_convertItems.AsQueryable()" GenerateHeader="GenerateHeaderOption.None">
        <PropertyColumn Property="@(i => i.OriginalFilename)" />
        <TemplateColumn>
            <FluentSelect @bind-SelectedOption="@context.TargetFormat" OptionText="f => f!.Name" Items="@_formats" Placeholder="请选择" />

        </TemplateColumn>
        <PropertyColumn Property="@(i => i.OriginalFile.Length)" />
        <PropertyColumn Property="@(i => i.OriginalFilename)" />
    </FluentDataGrid>
}
<FluentCard Height="300">
    <FluentSelect OptionText="f => f.Name" Items="@_formats" Placeholder="请选择" />
</FluentCard>
<FluentCard AreaRestricted="false" Height="300">
    <FluentSelect OptionText="f => f.Name" Items="@_formats" Placeholder="请选择" />
</FluentCard>

@code {
    private readonly IEnumerable<IImageFormat> _formats = Configuration.Default.ImageFormats;
    private readonly List<ConvertItem> _convertItems = [];

    private class ConvertItem {
        public required string OriginalFilename { get; init; }
        public string? ConvertedFilename { get; set; }
        public required FileInfo OriginalFile { get; init; }
        public FileInfo? ConvertedFile { get; set; }
        public ConvertStatus Status { get; set; } = ConvertStatus.Pending;
        public IImageFormat? TargetFormat { get; set; }
    }

    private enum ConvertStatus : byte {
        Pending,
        Processing,
        Completed,
        Failed
    }


    private void OnFilesUploaded(IEnumerable<FluentInputFileEventArgs> files) {
        foreach (var file in files) {
            _convertItems.Add(new() {
                // 由于 InputFileMode.SaveToTemporaryFolder，所以 LocalFile 不应该为空
                OriginalFile = file.LocalFile ?? throw new ArgumentNullException(),
                OriginalFilename = file.Name
            });
        }
    }

    protected override void OnInitialized() {
        Logger.LogInformation("ImageConverter 初始化");
        Logger.LogInformation("{c}", Configuration.Default.ImageFormats);
    }


}